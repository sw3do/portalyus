---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Admin Girişi - Portalyus">
  <div class="min-h-screen bg-gray-900 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <h1 class="text-center text-4xl font-bold text-white mb-2">Portalyus</h1>
        <h2 class="text-center text-2xl font-bold text-gray-300">Admin Paneli</h2>
        <p class="mt-2 text-center text-sm text-gray-400">
          Yönetici hesabınızla giriş yapın
        </p>
      </div>
      
      <div class="bg-gray-800 rounded-lg shadow-xl p-8">
        <form id="loginForm" class="space-y-6">
          <div id="errorMessage" class="hidden bg-red-600 text-white p-3 rounded-lg text-sm"></div>
          
          <div>
            <label for="username" class="block text-sm font-medium text-gray-300 mb-2">
              Kullanıcı Adı
            </label>
            <input
              id="username"
              name="username"
              type="text"
              required
              class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="Kullanıcı adınızı girin"
            />
          </div>
          
          <div>
            <label for="password" class="block text-sm font-medium text-gray-300 mb-2">
              Şifre
            </label>
            <input
              id="password"
              name="password"
              type="password"
              required
              class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="Şifrenizi girin"
            />
          </div>
          
          <div>
            <button
              type="submit"
              id="submitButton"
              class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              <span id="buttonText">Giriş Yap</span>
              <svg id="loadingSpinner" class="hidden animate-spin ml-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
            </button>
          </div>
        </form>
      </div>
      
      <div class="text-center">
        <a href="/" class="text-blue-400 hover:text-blue-300 text-sm transition-colors">
          ← Ana sayfaya dön
        </a>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('loginForm') as HTMLFormElement;
    const errorMessage = document.getElementById('errorMessage') as HTMLDivElement;
    const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
    const buttonText = document.getElementById('buttonText') as HTMLSpanElement;
    const loadingSpinner = document.getElementById('loadingSpinner') as HTMLElement;
    
    if (!form || !errorMessage || !submitButton || !buttonText || !loadingSpinner) {
      console.error('Required elements not found');
      return;
    }
    
    // Check if already logged in
    const token = localStorage.getItem('admin_token');
    const expiry = localStorage.getItem('token_expiry');
    if (token && expiry && Date.now() < parseInt(expiry)) {
      window.location.href = '/admin';
      return;
    }
    
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const usernameElement = document.getElementById('username') as HTMLInputElement;
      const passwordElement = document.getElementById('password') as HTMLInputElement;
      
      if (!usernameElement || !passwordElement) {
        console.error('Username or password input not found');
        return;
      }
      
      const username = usernameElement.value;
      const password = passwordElement.value;
      
      // Show loading state
      submitButton.disabled = true;
      buttonText.textContent = 'Giriş yapılıyor...';
      loadingSpinner.classList.remove('hidden');
      errorMessage.classList.add('hidden');
      
      try {
        const response = await fetch(`${import.meta.env.PUBLIC_API_URL || 'http://localhost:3001/api'}/auth/login`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ username, password }),
        });
        
        const data = await response.json();
        
        if (data.success && data.data.token) {
          // Store token
          localStorage.setItem('admin_token', data.data.token);
          const expiryTimestamp = new Date(data.data.expires_at).getTime();
          localStorage.setItem('token_expiry', expiryTimestamp.toString());
          
          // Redirect to admin panel
          window.location.href = '/admin';
        } else {
          throw new Error(data.message || 'Giriş başarısız');
        }
      } catch (error) {
        console.error('Login error:', error);
        const errorMsg = error instanceof Error ? error.message : 'Giriş yapılırken bir hata oluştu';
        errorMessage.textContent = errorMsg;
        errorMessage.classList.remove('hidden');
      } finally {
        // Reset loading state
        submitButton.disabled = false;
        buttonText.textContent = 'Giriş Yap';
        loadingSpinner.classList.add('hidden');
      }
    });
  });
</script>