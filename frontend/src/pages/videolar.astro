---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.tsx';
import VideoCard from '../components/VideoCard.tsx';
import { getApiUrl } from '../config/env';
import type { Video, Category, ApiResponse } from '../types/index';

const url = Astro.url;
const page = parseInt(url.searchParams.get('page') || '1');
const category = url.searchParams.get('category') || '';
const limit = 20;
const offset = (page - 1) * limit;

let videos: Video[] = [];
let categories: Category[] = [];
let totalVideos = 0;
let totalPages = 0;

try {
  const [videosRes, categoriesRes] = await Promise.all([
    fetch(getApiUrl(`/videos?limit=${limit}&offset=${offset}${category ? `&category=${category}` : ''}`)),
    fetch(getApiUrl('/categories'))
  ]);

  const videosData: ApiResponse<{ videos: Video[], total: number }> = await videosRes.json();
  const categoriesData: ApiResponse<Category[]> = await categoriesRes.json();

  if (videosData.success) {
    videos = videosData.data.videos || videosData.data;
    totalVideos = videosData.data.total || videos.length;
    totalPages = Math.ceil(totalVideos / limit);
  }
  if (categoriesData.success) categories = categoriesData.data;
} catch (error) {
  console.error('Error fetching videos:', error);
}

const selectedCategory = categories.find(cat => cat.slug === category);
---

<Layout title={`Tüm Videolar${selectedCategory ? ` - ${selectedCategory.name}` : ''} - Portalyus`} description="Portalyus'ta yayınlanan tüm video içeriklerini keşfedin">
  <Navigation client:load />
  
  <main class="min-h-screen bg-gradient-to-br from-gray-900 via-red-900/20 to-orange-900/30 relative overflow-hidden">
    <div class="absolute inset-0 opacity-5">
      <div class="absolute inset-0" style="background-image: radial-gradient(circle at 25% 25%, #ef4444 0%, transparent 50%), radial-gradient(circle at 75% 75%, #f97316 0%, transparent 50%), radial-gradient(circle at 50% 50%, #dc2626 0%, transparent 50%); background-size: 100px 100px, 150px 150px, 200px 200px;"></div>
    </div>
    
    <section class="bg-gradient-to-r from-gray-800/80 via-red-900/40 to-orange-900/50 py-16 relative">
      <div class="absolute inset-0 bg-gradient-to-r from-red-500/10 to-orange-500/10"></div>
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-gradient-to-br from-gray-800 via-red-900/30 to-orange-900/40 rounded-2xl p-8 shadow-2xl border border-red-500/30 relative">
          <div class="absolute inset-0 bg-gradient-to-r from-red-500/10 to-orange-500/10 rounded-2xl"></div>
          <div class="relative z-10">
            <div class="text-center mb-8">
              <h1 class="text-4xl md:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-red-400 via-orange-300 to-yellow-400 mb-4 leading-tight drop-shadow-lg">
                {selectedCategory ? selectedCategory.name : 'Tüm Videolar'}
              </h1>
              <p class="text-gray-300 text-lg">
                {selectedCategory ? `${selectedCategory.name} kategorisindeki videolar` : "Portalyus'ta yayınlanan tüm video içerikleri"}
              </p>
              <div class="flex items-center justify-center space-x-2 mt-4 text-gray-400">
                <svg class="w-5 h-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                </svg>
                <span class="font-semibold">{totalVideos}</span>
                <span>video bulundu</span>
              </div>
            </div>
            
            {categories.length > 0 && (
              <div class="mb-8">
                <h3 class="text-xl font-bold text-white mb-4 flex items-center">
                  <svg class="w-6 h-6 mr-2 text-orange-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                  </svg>
                  Kategoriler
                </h3>
                <div class="flex flex-wrap gap-3">
                  <a 
                    href="/videolar"
                    class={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 ${
                      !category 
                        ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white shadow-lg' 
                        : 'bg-gray-700/50 text-gray-300 hover:bg-gray-600/50 hover:text-white'
                    }`}
                  >
                    Tümü
                  </a>
                  {categories.map((cat: Category) => (
                    <a 
                      href={`/videolar?category=${cat.slug}`}
                      class={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 ${
                        category === cat.slug 
                          ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white shadow-lg' 
                          : 'bg-gray-700/50 text-gray-300 hover:bg-gray-600/50 hover:text-white'
                      }`}
                    >
                      {cat.name}
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
    
    <section class="py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {videos.length > 0 ? (
          <>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 mb-12">
              {videos.map((video: Video) => (
                <VideoCard video={video} client:load />
              ))}
            </div>
            
            {totalPages > 1 && (
              <div class="flex justify-center items-center space-x-2">
                {page > 1 && (
                  <a 
                    href={`/videolar?page=${page - 1}${category ? `&category=${category}` : ''}`}
                    class="flex items-center px-4 py-2 bg-gradient-to-r from-gray-700 to-gray-800 hover:from-red-600 hover:to-orange-600 text-white rounded-lg transition-all duration-300 font-medium"
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                    Önceki
                  </a>
                )}
                
                <div class="flex items-center space-x-1">
                  {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {
                    const pageNum = Math.max(1, Math.min(totalPages - 4, page - 2)) + i;
                    if (pageNum > totalPages) return null;
                    return (
                      <a 
                        href={`/videolar?page=${pageNum}${category ? `&category=${category}` : ''}`}
                        class={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-300 ${
                          pageNum === page 
                            ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white shadow-lg' 
                            : 'bg-gray-700/50 text-gray-300 hover:bg-gray-600/50 hover:text-white'
                        }`}
                      >
                        {pageNum}
                      </a>
                    );
                  })}
                </div>
                
                {page < totalPages && (
                  <a 
                    href={`/videolar?page=${page + 1}${category ? `&category=${category}` : ''}`}
                    class="flex items-center px-4 py-2 bg-gradient-to-r from-gray-700 to-gray-800 hover:from-red-600 hover:to-orange-600 text-white rounded-lg transition-all duration-300 font-medium"
                  >
                    Sonraki
                    <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                  </a>
                )}
              </div>
            )}
          </>
        ) : (
          <div class="text-center py-16">
            <div class="bg-gradient-to-br from-gray-800 via-red-900/30 to-orange-900/40 rounded-2xl p-12 shadow-2xl border border-red-500/30 max-w-md mx-auto relative">
              <div class="absolute inset-0 bg-gradient-to-r from-red-500/10 to-orange-500/10 rounded-2xl"></div>
              <div class="relative z-10">
                <div class="flex flex-col items-center space-y-4">
                  <div class="w-20 h-20 bg-gradient-to-br from-red-600/20 to-orange-600/20 rounded-full flex items-center justify-center">
                    <svg class="w-10 h-10 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                    </svg>
                  </div>
                  <h3 class="text-xl font-semibold text-white mb-2">
                    Video bulunamadı
                  </h3>
                  <p class="text-gray-400">
                    {selectedCategory ? `${selectedCategory.name} kategorisinde henüz video yok.` : "Henüz video yayınlanmamış."}
                  </p>
                  <a 
                    href="/"
                    class="mt-4 inline-flex items-center bg-gradient-to-r from-red-600 to-orange-600 hover:from-red-700 hover:to-orange-700 text-white px-6 py-3 rounded-full transition-all duration-300 transform hover:scale-105 font-medium shadow-lg"
                  >
                    Ana Sayfaya Dön
                  </a>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </section>
  </main>
</Layout>