---
import Layout from '../../layouts/Layout.astro';
import VideoCard from '../../components/VideoCard.tsx';
import { getApiUrl, getUploadsUrl } from '../../config/env';
import type { Channel, Video, ApiResponse } from '../../types/index';

const { slug } = Astro.params;

let channel: Channel | null = null;

try {
  const response = await fetch(getApiUrl(`/channels/${slug}`));
  const data: ApiResponse<Channel> = await response.json();
  
  if (data.success) {
    channel = data.data;
  }
} catch (err) {
  console.error('Error fetching channel:', err);
}

if (!channel) {
  return Astro.redirect('/404');
}

let videos: Video[] = [];

try {
  const videosRes = await fetch(getApiUrl(`/channels/${slug}/videos`));
  const videosData: ApiResponse<Video[]> = await videosRes.json();
  
  if (videosData.success) {
    videos = videosData.data;
  }
} catch (err) {
  console.error('Error fetching videos:', err);
}

if (!channel) {
  return Astro.redirect('/404');
}

const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('tr-TR', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};
---

<Layout title={`${channel.name} - Portalyus`} description={`${channel.name} kanalının tüm videolarını izleyin`}>

  <main class="min-h-screen bg-gradient-to-br from-gray-900 via-red-900/20 to-orange-900/30 relative overflow-hidden">
    <!-- Gaming Background Pattern -->
    <div class="absolute inset-0 opacity-5">
      <div class="absolute inset-0" style="background-image: radial-gradient(circle at 25% 25%, #ef4444 0%, transparent 50%), radial-gradient(circle at 75% 75%, #f97316 0%, transparent 50%), radial-gradient(circle at 50% 50%, #dc2626 0%, transparent 50%); background-size: 100px 100px, 150px 150px, 200px 200px;"></div>
    </div>
    <!-- Channel Header -->
    <section class="bg-gradient-to-r from-gray-800/80 via-red-900/40 to-orange-900/50 py-8 sm:py-12 md:py-16 relative">
      <div class="absolute inset-0 bg-gradient-to-r from-red-500/10 to-orange-500/10"></div>
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-gradient-to-br from-gray-800 via-red-900/30 to-orange-900/40 rounded-2xl p-4 sm:p-6 md:p-8 shadow-2xl border border-red-500/30 relative">
          <div class="absolute inset-0 bg-gradient-to-r from-red-500/10 to-orange-500/10 rounded-2xl"></div>
          <div class="relative z-10">
          <div class="flex flex-col md:flex-row items-center md:items-start space-y-4 sm:space-y-6 md:space-y-0 md:space-x-6 lg:space-x-8">
            <div class="flex-shrink-0">
              {channel.image ? (
                <img
                      src={getUploadsUrl(`/channels/${channel.image}`)}
                      alt={channel.name}
                      class="w-24 h-24 sm:w-32 sm:h-32 md:w-40 md:h-40 rounded-full ring-4 sm:ring-6 md:ring-8 ring-gray-600 shadow-2xl"
                    />
              ) : (
                <div class="w-24 h-24 sm:w-32 sm:h-32 md:w-40 md:h-40 bg-gradient-to-br from-red-500 to-orange-500 rounded-full ring-4 sm:ring-6 md:ring-8 ring-gray-600 shadow-2xl flex items-center justify-center">
                  <span class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl text-white font-bold">{channel.name.charAt(0)}</span>
                </div>
              )}
            </div>
            
            <div class="flex-1 text-center md:text-left">
              <h1 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-red-400 via-orange-300 to-yellow-400 mb-3 sm:mb-4 leading-tight drop-shadow-lg">
                {channel.name}
              </h1>
              <div class="flex flex-col sm:flex-row sm:items-center sm:space-x-4 md:space-x-6 text-gray-300 text-sm sm:text-base md:text-lg">
                <div class="flex items-center justify-center md:justify-start space-x-2 mb-2 sm:mb-0">
                  <svg class="w-4 h-4 sm:w-5 sm:h-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                  </svg>
                  <span class="font-semibold">{videos.length}</span>
                  <span>video</span>
                </div>
                <span class="hidden sm:inline text-gray-600">•</span>
                <div class="flex items-center justify-center md:justify-start space-x-2">
                  <svg class="w-4 h-4 sm:w-5 sm:h-5 text-orange-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                  <span class="hidden sm:inline">Katılma tarihi:</span>
                  <span class="sm:hidden">Katıldı:</span>
                  <span class="font-semibold">{formatDate(channel.created_at)}</span>
                </div>
              </div>
              </div>
            </div>
          </div>
          </div>
        </div>
      </div>
    </section>
    
    <!-- Videos Section -->
    <section class="py-12 sm:py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {videos.length > 0 ? (
          <>
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6 sm:mb-8 space-y-4 sm:space-y-0">
              <h2 class="text-2xl sm:text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-red-400 to-orange-400 flex items-center justify-center sm:justify-start">
                <svg class="w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 mr-2 sm:mr-3 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
                Videolar ({videos.length})
              </h2>
              <div class="text-gray-400 text-xs sm:text-sm text-center sm:text-right">
                En yeni videolar
              </div>
            </div>
            
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:gap-6 md:gap-8">
              {videos.map((video: Video) => (
                <VideoCard video={video} client:load />
              ))}
            </div>
          </>
        ) : (
          <div class="text-center py-12 sm:py-16">
            <div class="bg-gradient-to-br from-gray-800 via-red-900/30 to-orange-900/40 rounded-2xl p-6 sm:p-8 md:p-12 shadow-2xl border border-red-500/30 max-w-md mx-auto relative">
              <div class="absolute inset-0 bg-gradient-to-r from-red-500/10 to-orange-500/10 rounded-2xl"></div>
              <div class="relative z-10">
              <div class="flex flex-col items-center space-y-3 sm:space-y-4">
                <div class="w-16 h-16 sm:w-18 sm:h-18 md:w-20 md:h-20 bg-gradient-to-br from-red-600/20 to-orange-600/20 rounded-full flex items-center justify-center">
                  <svg class="w-8 h-8 sm:w-9 sm:h-9 md:w-10 md:h-10 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                  </svg>
                </div>
                <h3 class="text-lg sm:text-xl font-semibold text-white mb-1 sm:mb-2">
                  Henüz video yok
                </h3>
                <p class="text-gray-400 text-sm sm:text-base">
                  Bu kanal henüz video yayınlamamış.
                </p>
                <p class="text-gray-500 text-xs sm:text-sm">Yakında yeni videolar eklenecek!</p>
               </div>
               </div>
             </div>
          </div>
        )}
      </div>
    </section>
  </main>
</Layout>