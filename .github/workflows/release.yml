name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true

  build-backend:
    name: Build Backend
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          backend/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build backend
      working-directory: ./backend
      run: cargo build --release
    
    - name: Package binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd backend/target/release
        tar -czf portalyus-backend-${{ matrix.os }}.tar.gz portalyus
    
    - name: Package binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd backend/target/release
        7z a portalyus-backend-${{ matrix.os }}.zip portalyus.exe
    
    - name: Upload Release Asset (Unix)
      if: matrix.os != 'windows-latest'
      uses: softprops/action-gh-release@v1
      with:
        files: backend/target/release/portalyus-backend-${{ matrix.os }}.tar.gz
    
    - name: Upload Release Asset (Windows)
      if: matrix.os == 'windows-latest'
      uses: softprops/action-gh-release@v1
      with:
        files: backend/target/release/portalyus-backend-${{ matrix.os }}.zip

  build-frontend:
    name: Build Frontend
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Package frontend
      run: |
        cd frontend
        tar -czf portalyus-frontend.tar.gz dist/
    
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: frontend/portalyus-frontend.tar.gz